Description: Template CloudFormation permettant de gerer les ressources propres aux differents reseaux

Parameters:

  ProjectGroupName:
    Type: String
    Description: Nom de l'organisation fictive
    Default: "m1srcaws"

  Environment:
    Type: String
    Description: Environnement
    AllowedValues: 
      - prod
      - test
      - dev
    Default: prod

  VpcCIDR:
    Description: CIDR pour le VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: Premier sous-reseau publique de la premiere AZ
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2CIDR:
    Description: Second sous-reseau publique de la seconde AZ
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet1CIDR:
    Description: Premier sous-reseau privee de la premiere AZ
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet2CIDR:
    Description: Second sous-reseau privee seconde AZ
    Type: String
    Default: 10.0.4.0/24

Resources:

  # Creation du VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-VPC

  # Creation des sous-reseaux publiques et prives
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PublicSubnet1
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PublicSubnet2
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PrivateSubnet1
  
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PrivateSubnet2
  
  # Creation de l'Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  # Tables de routage reseaux publiques
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PublicRouteTable
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  
  # Creation de la NAT Gateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP
    Properties: 
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt NatPublicIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-NatGateway


  NatGateway2:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP2
    Properties: 
      SubnetId: !Ref PublicSubnet2
      AllocationId: !GetAtt NatPublicIP2.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-NatGateway2


  # Elastic IP 
  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    Properties:
      Domain: vpc
  
  NatPublicIP2:
    Type: AWS::EC2::EIP
    DependsOn: VPC
    Properties:
      Domain: vpc

  # Table de routage reseaux privees
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PrivateRouteTable

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectGroupName}-${Environment}-PrivateRouteTable2

  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties:
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  PrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: NatGateway2
    Properties:
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0

  
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2


Outputs:

  VPC:
    Value: !Ref VPC
    Export:
      Name: VPCID

  PublicSubnets:
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: PublicSubnets

  PrivateSubnets:
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: PrivateSubnets

  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1

  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2

  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1

  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet2

